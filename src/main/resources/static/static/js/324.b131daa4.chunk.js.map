{"version":3,"file":"static/js/324.b131daa4.chunk.js","mappings":"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","sources":["api/tosspayment.js","components/payment/PaymentSuccessComponent.js","pages/payments/PaymentSuccessPage.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const API_SERVER_HOST = \"http://localhost:8080\";\r\n\r\nexport const confirmPayment = async (request) => {\r\n  const header = \"Bearer \" +localStorage.getItem('jwt');\r\n  const res = await axios.post(`${API_SERVER_HOST}/payments/confirm`, request, {\r\n    headers: {\r\n      Authorization: header,\r\n    },\r\n  });\r\n  return res.data;\r\n};\r\n\r\nexport const cancelPayment = async (request) => {\r\n  const header = \"Bearer \" +localStorage.getItem('jwt');\r\n  const res = await axios.post(`${API_SERVER_HOST}/payments/cancel`, request, {\r\n    headers: {\r\n      Authorization: header,\r\n    },\r\n  });\r\n  return res.data;\r\n};\r\n\r\nexport const getPayments = async (page) => {\r\n  const header = \"Bearer \" +localStorage.getItem('jwt');\r\n  const res = await axios.get(`${API_SERVER_HOST}/payments`,  {\r\n    headers: {\r\n      Authorization: header,\r\n    }, params: {\r\n      page\r\n    },\r\n  });\r\n  return res.data.data;\r\n};\r\n\r\nexport const getPayment = async (productId) => {\r\n  const header = \"Bearer \" +localStorage.getItem('jwt');\r\n  const res = await axios.get(`${API_SERVER_HOST}/payments/${productId}`,  {\r\n    headers: {\r\n      Authorization: header,\r\n    },\r\n  });\r\n  return res.data;\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { confirmPayment } from \"../../api/tosspayment\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./PaymentPage.css\"; // CSS 파일을 import 합니다.\r\n\r\nconst initState = {\r\n  orderId: '',\r\n  paymentKey: '',\r\n  amount: 0\r\n};\r\n\r\nexport function SuccessPage() {\r\n  const [searchParams] = useSearchParams();\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(true); // 데이터 로딩 상태\r\n  const [requestParam, setRequestParam] = useState({ ...initState });\r\n  const [paymentResult, setPaymentResult] = useState(null); // 결제 결과 상태\r\n  const [msg, setMsg] = useState(\"알 수 없는 오류 발생\");\r\n\r\n  const returnToHomePage = () => {\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const checkPayment = async () => {\r\n    try {\r\n      const newRequestParam = { ...requestParam };\r\n      newRequestParam['orderId'] = searchParams.get(\"orderId\");\r\n      newRequestParam['paymentKey'] = searchParams.get(\"paymentKey\");\r\n      newRequestParam['amount'] = searchParams.get(\"amount\");\r\n\r\n      // 서버로 결제 승인 요청\r\n      const result = await confirmPayment(newRequestParam);\r\n      setPaymentResult(result); // 결제 결과 설정\r\n    } catch (error) {\r\n      console.error(\"Error while confirming payment:\", error);\r\n      setMsg(error.response?.data?.msg || \"알 수 없는 오류 발생\");\r\n    } finally {\r\n      setLoading(false); // 데이터 로딩 상태 갱신\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkPayment(); // 페이지가 로드될 때 결제 승인 확인\r\n  }, []); // 빈 배열을 전달하여 처음 한 번만 실행되도록 설정\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>; // 데이터 로딩 중일 때 표시할 내용\r\n  }\r\n\r\n  // 결제 성공 시 메시지 표시\r\n  if (paymentResult?.data.orderId) {\r\n    return (\r\n        <div className=\"payment-success-page\">\r\n          <h1 className=\"success-message\">결제 성공</h1>\r\n          <div className=\"result-info\">\r\n            <div className=\"result-box\">\r\n              <div className=\"result-title\">주문명</div>\r\n              <div className=\"textbox\">{paymentResult?.data.orderName}</div>\r\n            </div>\r\n            <div className=\"result-box\">\r\n              <div className=\"result-title\">주문 아이디</div>\r\n              <div className=\"textbox\">{paymentResult?.data.orderId}</div>\r\n            </div>\r\n            <div className=\"result-box\">\r\n              <div className=\"result-title\">결제 금액:</div>\r\n              <div className=\"textbox\">{paymentResult?.data.totalAmount}원\r\n              </div>\r\n            </div>\r\n            <div className=\"result-box\">\r\n              <div className=\"result-title\">결제 아이디</div>\r\n              <div className=\"textbox\">{paymentResult?.data.paymentKey}</div>\r\n            </div>\r\n          </div>\r\n          <button className=\"return-button\" onClick={returnToHomePage}>돌아가기\r\n          </button>\r\n        </div>\r\n    );\r\n  }\r\n\r\n  // 결제 실패 시 메시지 표시\r\n  return (\r\n      <div className=\"payment-fail-page\">\r\n        <h1 className=\"fail-message\">결제 실패</h1>\r\n        <div className=\"textbox fail-message\">{`사유: ${msg}`}</div>\r\n        <button className=\"return-button\" onClick={returnToHomePage}>돌아가기</button>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default SuccessPage;\r\n","import SuccessPage from \"../../components/payment/PaymentSuccessComponent\";\r\nimport \"./PaymentSuccessPage.css\"; // CSS 파일을 import 합니다.\r\n\r\nconst PaymentSuccessPage = () => {\r\n  return (\r\n      <div className=\"payment-success-container\">\r\n        <SuccessPage />\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default PaymentSuccessPage;\r\n"],"names":["API_SERVER_HOST","confirmPayment","async","header","localStorage","getItem","axios","post","concat","request","headers","Authorization","data","cancelPayment","getPayments","get","params","page","getPayment","productId","initState","orderId","paymentKey","amount","searchParams","useSearchParams","navigate","useNavigate","loading","setLoading","useState","requestParam","setRequestParam","paymentResult","setPaymentResult","msg","setMsg","returnToHomePage","useEffect","newRequestParam","result","error","_error$response","_error$response$data","console","response","checkPayment","_jsx","children","_jsxs","className","orderName","totalAmount","onClick","PaymentSuccessPage","SuccessPage"],"sourceRoot":""}