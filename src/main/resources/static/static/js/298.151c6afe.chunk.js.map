{"version":3,"file":"static/js/298.151c6afe.chunk.js","mappings":"0JAEO,MAAMA,EAAkB,wBAElBC,EAAiBC,UAC5B,MAAMC,EAAS,UAAWC,aAAaC,QAAQ,OAM/C,aALkBC,EAAAA,EAAMC,KAAK,GAADC,OAAIR,EAAe,qBAAqBS,EAAS,CAC3EC,QAAS,CACPC,cAAeR,MAGRS,IAAI,EAGJC,EAAgBX,UAC3B,MAAMC,EAAS,UAAWC,aAAaC,QAAQ,OAM/C,aALkBC,EAAAA,EAAMC,KAAK,GAADC,OAAIR,EAAe,oBAAoBS,EAAS,CAC1EC,QAAS,CACPC,cAAeR,MAGRS,IAAI,EAGJE,EAAcZ,UACzB,MAAMC,EAAS,UAAWC,aAAaC,QAAQ,OAQ/C,aAPkBC,EAAAA,EAAMS,IAAI,GAADP,OAAIR,EAAe,aAAc,CAC1DU,QAAS,CACPC,cAAeR,GACda,OAAQ,CACTC,WAGOL,KAAKA,IAAI,EAGTM,EAAahB,UACxB,MAAMC,EAAS,UAAWC,aAAaC,QAAQ,OAM/C,aALkBC,EAAAA,EAAMS,IAAI,GAADP,OAAIR,EAAe,cAAAQ,OAAaW,GAAc,CACvET,QAAS,CACPC,cAAeR,MAGRS,IAAI,C,mECzCV,MAAMZ,EAAkB,wBAElBoB,EAAgBlB,UAC3B,MAAMC,EAAS,UAAWC,aAAaC,QAAQ,OAM/C,aALkBC,EAAAA,EAAMC,KAAK,GAADC,OAAIR,EAAe,gBAAgBqB,EAAmB,CAChFX,QAAS,CACPC,cAAeR,MAGRS,IAAI,EAGJU,EAAiBpB,UAC5B,MAAMC,EAAQ,UAAYC,aAAaC,QAAQ,OAQ/C,aAPkBC,EAAAA,EAAMS,IAAI,GAADP,OAAIR,EAAe,gBAAiB,CAC7DU,QAAS,CACPC,cAAeR,GACda,OAAQ,CACTC,WAGOL,KAAKA,IAAI,EAGTW,EAAgBrB,UAC3B,MAAMC,EAAQ,UAAYC,aAAaC,QAAQ,OAM/C,aALkBC,EAAAA,EAAMS,IAAI,GAADP,OAAIR,EAAe,iBAAAQ,OAAgBgB,GAAiB,CAC7Ed,QAAS,CACPC,cAAeR,MAGRS,IAAI,C,8GCFjB,QA5BA,SAA2Ba,GAA2B,IAA1B,WAAEC,EAAU,QAAEC,GAASF,EACjD,MAAOG,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,IAajD,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,QAAOC,SAAA,EACpBC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,eAAeG,QAASR,EAAQM,SAAC,OACnDC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,qEACHC,EAAAA,EAAAA,KAAA,YACIE,MAAOR,EACPS,SAAWC,GAAMT,EAAgBS,EAAEC,OAAOH,OAC1CI,KAAM,KAEVN,EAAAA,EAAAA,KAAA,UAAQC,QApBOjC,UACnB,UAEQW,EAAAA,EAAAA,IAAc,CAAEa,aAAYE,iBAClCa,MAAM,kEACNd,GACF,CAAE,MAAOe,GACPC,QAAQD,MAAM,2BAA4BA,EAC5C,GAYkCT,SAAC,gCAGvC,EC+DA,QArFA,WACE,MAAM,aAAET,IAAiBoB,EAAAA,EAAAA,MAClBC,EAAYC,IAAiBhB,EAAAA,EAAAA,UAAS,OACtCY,EAAOK,IAAYjB,EAAAA,EAAAA,UAAS,OAC5BkB,EAAWC,IAAgBnB,EAAAA,EAAAA,WAAS,IACpCF,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,IA0BjD,OAxBAoB,EAAAA,EAAAA,YAAU,KACsBhD,WAC5B,IACE,MAAMiD,QAAY5B,EAAAA,EAAAA,IAAcC,GAChCsB,EAAcK,EAAIvC,MAClB+B,QAAQS,IAAID,EAAIvC,KAClB,CAAE,MAAO8B,GACPC,QAAQD,MAAM,qCAAsCA,GACpDK,EAASL,EACX,GAGFW,EAAuB,GACtB,CAAC7B,IAWAkB,GAEEX,EAAAA,EAAAA,MAAA,OAAKC,UAAU,+BAA8BC,SAAA,EAC3CC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,4CACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,0FAKNY,GAKDd,EAAAA,EAAAA,MAAA,OAAKC,UAAU,+BAA8BC,SAAA,EAC3CC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,4CACJF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EACjCF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,uBAAMY,EAAWS,aAEiB,WAApCT,EAAWU,sBACRxB,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,yDACHF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,8BAAQ,IAAIuB,KAAKX,EAAWY,YAAYC,wBAG7C3B,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,0DACHF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,8BAAQ,IAAIuB,KAAKX,EAAWY,YAAYC,wBAGjD3B,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,iBAAKY,EAAWc,MAAM,cACzB5B,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,8BAAQY,EAAWe,SAAS,cAC/B7B,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,8BAAQY,EAAWgB,YAAY,cAClC9B,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,8BAAQY,EAAWiB,aAAa,cACnC/B,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,iBAAKY,EAAWkB,cAGgB,WAApClB,EAAWU,uBACRrB,EAAAA,EAAAA,KAAA,UAAQF,UAAU,SAASG,QA/Cb6B,KACtBf,GAAa,EAAK,EA8C0ChB,SAAC,8BAKxDe,IACGd,EAAAA,EAAAA,KAAC+B,EAAkB,CAACvC,WAAYmB,EAAWnB,WACvBC,QAlDLuC,KACvBjB,GAAa,GACbpB,EAAgB,GAAG,KAkDfK,EAAAA,EAAAA,KAACiC,EAAAA,KAAI,CAACC,GAAG,eAAcnC,UACrBC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,SAAQC,SAAC,mCAtC1BC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,sEA0Cd,EC9EA,EAV8BoC,KAExBnC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,0DAAyDC,UACtEC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oEAAmEC,UAChFC,EAAAA,EAAAA,KAACoC,EAAoB,O","sources":["api/tosspayment.js","api/totalOrderApi.js","components/payment/PaymentCancelPopup.js","components/payment/TotalOrderDataComponent.js","pages/payments/TotalOrderDetailPage.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const API_SERVER_HOST = \"http://localhost:8080\";\r\n\r\nexport const confirmPayment = async (request) => {\r\n  const header = \"Bearer \" +localStorage.getItem('jwt');\r\n  const res = await axios.post(`${API_SERVER_HOST}/payments/confirm`, request, {\r\n    headers: {\r\n      Authorization: header,\r\n    },\r\n  });\r\n  return res.data;\r\n};\r\n\r\nexport const cancelPayment = async (request) => {\r\n  const header = \"Bearer \" +localStorage.getItem('jwt');\r\n  const res = await axios.post(`${API_SERVER_HOST}/payments/cancel`, request, {\r\n    headers: {\r\n      Authorization: header,\r\n    },\r\n  });\r\n  return res.data;\r\n};\r\n\r\nexport const getPayments = async (page) => {\r\n  const header = \"Bearer \" +localStorage.getItem('jwt');\r\n  const res = await axios.get(`${API_SERVER_HOST}/payments`,  {\r\n    headers: {\r\n      Authorization: header,\r\n    }, params: {\r\n      page\r\n    },\r\n  });\r\n  return res.data.data;\r\n};\r\n\r\nexport const getPayment = async (productId) => {\r\n  const header = \"Bearer \" +localStorage.getItem('jwt');\r\n  const res = await axios.get(`${API_SERVER_HOST}/payments/${productId}`,  {\r\n    headers: {\r\n      Authorization: header,\r\n    },\r\n  });\r\n  return res.data;\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const API_SERVER_HOST = \"http://localhost:8080\";\r\n\r\nexport const totalOrderAdd = async (totalOrderRequest) => {\r\n  const header = \"Bearer \" +localStorage.getItem('jwt');\r\n  const res = await axios.post(`${API_SERVER_HOST}/totalOrders`, totalOrderRequest, {\r\n    headers: {\r\n      Authorization: header,\r\n    },\r\n  });\r\n  return res.data;\r\n};\r\n\r\nexport const getTotalOrders = async (page) => {\r\n  const header =\"Bearer \" + localStorage.getItem('jwt');\r\n  const res = await axios.get(`${API_SERVER_HOST}/totalOrders`,  {\r\n    headers: {\r\n      Authorization: header,\r\n    }, params: {\r\n      page\r\n    },\r\n  });\r\n  return res.data.data;\r\n};\r\n\r\nexport const getTotalOrder = async (totalOrderId) => {\r\n  const header =\"Bearer \" + localStorage.getItem('jwt');\r\n  const res = await axios.get(`${API_SERVER_HOST}/totalOrders/${totalOrderId}`,  {\r\n    headers: {\r\n      Authorization: header,\r\n    },\r\n  });\r\n  return res.data;\r\n};\r\n","import React, { useState } from 'react';\r\nimport { cancelPayment } from '../../api/tosspayment';\r\n\r\nfunction PaymentCancelPopup({ paymentKey, onClose }) {\r\n  const [cancelReason, setCancelReason] = useState('');\r\n\r\n  const handleCancel = async () => {\r\n    try {\r\n      // 취소 사유와 결제 키를 바탕으로 결제를 취소합니다.\r\n      await cancelPayment({ paymentKey, cancelReason });\r\n      alert('취소가 완료되었습니다.');\r\n      onClose(); // 팝업을 닫습니다.\r\n    } catch (error) {\r\n      console.error('Error canceling payment:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n      <div className=\"popup\">\r\n        <button className=\"close-button\" onClick={onClose}>X</button>\r\n        <p>취소 사유를 입력하세요:</p>\r\n        <textarea\r\n            value={cancelReason}\r\n            onChange={(e) => setCancelReason(e.target.value)}\r\n            rows={4}\r\n        />\r\n        <button onClick={handleCancel}>결제 취소</button>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default PaymentCancelPopup;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { getTotalOrder } from '../../api/totalOrderApi';\r\nimport axios from 'axios';\r\nimport PaymentCancelPopup from './PaymentCancelPopup'; // PaymentCancelPopup 컴포넌트 import\r\nimport \"./TotalOrderData.css\"\r\n\r\nfunction TotalOrderDetailPage() {\r\n  const { totalOrderId } = useParams();\r\n  const [totalOrder, setTotalOrder] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [showPopup, setShowPopup] = useState(false); // 팝업을 열고 닫는 상태 추가\r\n  const [cancelReason, setCancelReason] = useState(''); // 취소 사유를 관리하는 상태 추가\r\n\r\n  useEffect(() => {\r\n    const fetchTotalOrderDetail = async () => {\r\n      try {\r\n        const res = await getTotalOrder(totalOrderId);\r\n        setTotalOrder(res.data);\r\n        console.log(res.data)\r\n      } catch (error) {\r\n        console.error('Error fetching total order detail:', error);\r\n        setError(error);\r\n      }\r\n    };\r\n\r\n    fetchTotalOrderDetail();\r\n  }, [totalOrderId]);\r\n\r\n  const handlePopupOpen = () => {\r\n    setShowPopup(true); // 팝업을 열 때 상태 변경\r\n  };\r\n\r\n  const handlePopupClose = () => {\r\n    setShowPopup(false); // 팝업을 닫을 때 상태 변경\r\n    setCancelReason(''); // 팝업을 닫을 때 취소 사유 초기화\r\n  };\r\n\r\n  if (error) {\r\n    return (\r\n        <div className=\"total-order-detail-container\">\r\n          <h1>주문 상세 정보</h1>\r\n          <p>권한이 없는 주문 페이지입니다.</p>\r\n        </div>\r\n    );\r\n  }\r\n\r\n  if (!totalOrder) {\r\n    return <p>주문 정보를 불러오는 중...</p>;\r\n  }\r\n\r\n  return (\r\n      <div className=\"total-order-detail-container\">\r\n        <h1>주문 상세 정보</h1>\r\n        <div className=\"total-order-detail\">\r\n          <p>주문명: {totalOrder.orderName}</p>\r\n          {/* 주문 상태에 따라 다른 내용 표시 */}\r\n          {totalOrder.paymentStatementEnum === 'REFUND' ? (\r\n              <div>\r\n                <p>결제 상태: 환불완료</p>\r\n                <p>환불 시간: {new Date(totalOrder.modifiedAt).toLocaleString()}</p>\r\n              </div>\r\n          ) : (\r\n              <div>\r\n                <p>결제 상태: 결제 성공</p>\r\n                <p>결제 시간: {new Date(totalOrder.modifiedAt).toLocaleString()}</p>\r\n              </div>\r\n          )}\r\n          <p>가격: {totalOrder.price} 원</p>\r\n          <p>할인 금액: {totalOrder.discount} 원</p>\r\n          <p>결제 총액: {totalOrder.priceAmount} 원</p>\r\n          <p>배송 비용: {totalOrder.deliveryCost} 원</p>\r\n          <p>주소: {totalOrder.address}</p>\r\n        </div>\r\n        {/* 팝업 창을 여는 버튼 추가 */}\r\n        {totalOrder.paymentStatementEnum !== 'REFUND' && (\r\n            <button className=\"button\" onClick={handlePopupOpen}>\r\n              결제 취소\r\n            </button>\r\n        )}\r\n        {/* 팝업 창 */}\r\n        {showPopup && (\r\n            <PaymentCancelPopup paymentKey={totalOrder.paymentKey}\r\n                                onClose={handlePopupClose}/>\r\n        )}\r\n        <Link to=\"/totalOrders\">\r\n          <button className=\"button\">돌아가기</button>\r\n        </Link>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default TotalOrderDetailPage;\r\n","import TotalOrderDetailPage from \"../../components/payment/TotalOrderDataComponent\";\r\n\r\nconst TotalOrdersDetailPage = () => {\r\n  return (\r\n      <div className=\"fixed top-0 left-0 z-[1055] flex flex-col h-full w-full\">\r\n        <div className=\"w-full flex flex-wrap h-full justify-center items-center border-2\">\r\n          <TotalOrderDetailPage />\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default TotalOrdersDetailPage;\r\n"],"names":["API_SERVER_HOST","confirmPayment","async","header","localStorage","getItem","axios","post","concat","request","headers","Authorization","data","cancelPayment","getPayments","get","params","page","getPayment","productId","totalOrderAdd","totalOrderRequest","getTotalOrders","getTotalOrder","totalOrderId","_ref","paymentKey","onClose","cancelReason","setCancelReason","useState","_jsxs","className","children","_jsx","onClick","value","onChange","e","target","rows","alert","error","console","useParams","totalOrder","setTotalOrder","setError","showPopup","setShowPopup","useEffect","res","log","fetchTotalOrderDetail","orderName","paymentStatementEnum","Date","modifiedAt","toLocaleString","price","discount","priceAmount","deliveryCost","address","handlePopupOpen","PaymentCancelPopup","handlePopupClose","Link","to","TotalOrdersDetailPage","TotalOrderDetailPage"],"sourceRoot":""}