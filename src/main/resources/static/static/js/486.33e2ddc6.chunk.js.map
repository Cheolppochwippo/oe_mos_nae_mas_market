{"version":3,"file":"static/js/486.33e2ddc6.chunk.js","mappings":"6HAAA,MAeE,EAfoBA,KAEhBC,EAAAA,EAAAA,KAAA,OACAC,UAAS,2GAA6GC,UACpHF,EAAAA,EAAAA,KAAA,OACAC,UAAU,qGAAoGC,UAE5GF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,+CAA8CC,SAAC,oB,0DCJxE,MAqBA,EArBsBC,KAEpB,MAAMC,GAAYC,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,YAEvCC,GAAWC,EAAAA,EAAAA,MAajB,MAAQ,CAACL,YAAYM,YAXDA,KAElBF,GAASG,EAAAA,EAAAA,MAAoB,EASGC,WALdC,IAElBL,GAASM,EAAAA,EAAAA,IAAoBD,GAAO,EAGO,C,uFChB/C,MAyEA,EAzEuBE,KACrB,MAAMC,GAAWC,EAAAA,EAAAA,MAEXT,GAAWC,EAAAA,EAAAA,MAyBXS,GAAab,EAAAA,EAAAA,KAAaC,GAAUA,EAAMa,aAiChD,MAAO,CACLD,aACAE,UAjCcF,EAAWG,SAkCzBC,QAhCcC,gBAGOf,GAASgB,EAAAA,EAAAA,IAAeC,KAE/BC,QA4BdC,SAzBeA,KAGfnB,GAASoB,EAAAA,EAAAA,MAAS,EAuBlBC,WApBkBC,IAElBd,EAAS,CAAEe,SAAUD,GAAQ,CAAEE,SAAS,GAAO,EAmB/CC,YAhBkBA,KAElBjB,EAAS,CAAEe,SAAU,iBAAmB,CAAEC,SAAS,GAAO,EAe1DE,kBAZwBA,KAEjBlC,EAAAA,EAAAA,KAACmC,EAAAA,GAAQ,CAACH,SAAO,EAACI,GAAG,kBAW5BC,gBAhEuBC,IACvBC,QAAQC,IAAI,qCAEZD,QAAQC,IAAIF,GAEZ,MAAMG,EAAWH,EAAGI,SAASC,KAAKC,MAE5BC,GAAWC,EAAAA,EAAAA,oBAAmB,CAAEF,MAAOH,IAAYM,WAEzD,MAAiB,kBAAbN,GACFO,MAAM,kEACNhC,EAAS,CAAEe,SAAU,gBAAiBkB,OAAQJ,KAKjB,uBAA3BP,EAAGI,SAASC,KAAKC,OACnBI,MAAM,4HACNhC,EAAS,CAAEe,SAAU,gBAAiBkB,OAAQJ,UAFhD,CAIA,EA6CD,C,oECvEH,MAAMK,EAASA,CAACrC,EAAOsC,IAChBtC,EAGEuC,SAASvC,GAFPsC,EAuCX,EAlCsBE,KACpB,MAAMrC,GAAWC,EAAAA,EAAAA,OACVqC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAChCC,IAAeC,EAAAA,EAAAA,mBAChBC,EAAOT,EAAOO,EAAYG,IAAI,QAAS,GACvCC,EAAOX,EAAOO,EAAYG,IAAI,QAAS,IACvCE,GAAehB,EAAAA,EAAAA,oBAAmB,CAAEa,OAAME,SAAQd,WAyBxD,MAAO,CAAEgB,WAvBWC,IAClB,IAAIC,EAAW,GACf,GAAID,EAAW,CACb,MAAME,EAAUhB,EAAOc,EAAUL,KAAM,GACjCQ,EAAUjB,EAAOc,EAAUH,KAAM,IACvCI,GAAWnB,EAAAA,EAAAA,oBAAmB,CAAEa,KAAMO,EAASL,KAAMM,IAAWpB,UAClE,MACEkB,EAAWH,EAEb9C,EAAS,CAAEe,SAAS,UAAYkB,OAAQgB,IACxCV,GAAYD,EAAQ,EAaDc,aAVCC,IACpB9B,QAAQC,IAAIsB,GACZ9C,EAAS,CAAEe,SAAS,aAADuC,OAAeD,GAAOpB,OAAQa,GAAe,EAQ/BS,WALfF,IAClB9B,QAAQC,IAAIsB,GACZ9C,EAAS,CAAEe,SAAS,WAADuC,OAAaD,GAAOpB,OAAQa,GAAe,EAGjBH,OAAME,OAAMP,UAAS,C,4IC/BtE,MA8KA,EA5KsBkB,IAAoB,IAAnB,UAAEC,GAAWD,EAClC,MAYMxD,GAAWC,EAAAA,EAAAA,OACVyD,EAASC,IAAcnB,EAAAA,EAAAA,UAbZ,CAChBiB,UAAW,EACXG,YAAa,GACbC,KAAM,GACNC,UAAW,EACXC,MAAO,EACPC,SAAU,EACVC,SAAU,EACVC,UAAW,GACXC,UAAW,MAKP,WAAEpB,EAAU,aAAEK,IAAiBf,EAAAA,EAAAA,MAC9B+B,EAAUC,IAAe7B,EAAAA,EAAAA,WAAS,IACnC,WAAE5C,EAAU,UAAER,IAAcD,EAAAA,EAAAA,MAC5B,WAAEe,IAAeH,EAAAA,EAAAA,MAChBkE,EAAUK,IAAe9B,EAAAA,EAAAA,UAAS,IAEzC+B,EAAAA,EAAAA,YAAU,KACRF,GAAY,IACZG,EAAAA,EAAAA,IAAOf,GACJgB,MAAM9C,IACLJ,QAAQC,IAAIG,GACZgC,EAAWhC,EAAKA,MAChB0C,GAAY,EAAM,IAEnBK,OAAO9C,IACNL,QAAQK,MAAMA,GACdyC,GAAY,EAAM,GAClB,GACH,CAACZ,IAuCJ,OACEkB,EAAAA,EAAAA,MAAA,OAAK1F,UAAU,wCAAuCC,SAAA,CACnDkF,GAAWpF,EAAAA,EAAAA,KAACD,EAAAA,EAAa,KAAMC,EAAAA,EAAAA,KAAA4F,EAAAA,SAAA,KAChC5F,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4BAA2BC,UACxCyF,EAAAA,EAAAA,MAAA,OAAK1F,UAAU,oDAAmDC,SAAA,EAChEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iCAAgCC,SAAC,qBAChDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oDAAmDC,SAC/DwE,EAAQmB,WAIf7F,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBC,UAClCyF,EAAAA,EAAAA,MAAA,OAAK1F,UAAU,oDAAmDC,SAAA,EAChEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iCAAgCC,SAAC,wBAChDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oDAAmDC,SAC/DwE,EAAQE,oBAIf5E,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBC,UAClCyF,EAAAA,EAAAA,MAAA,OAAK1F,UAAU,oDAAmDC,SAAA,EAChEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iCAAgCC,SAAC,kBAChDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oDAAmDC,SAC/DwE,EAAQK,cAIf/E,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBC,UAClCyF,EAAAA,EAAAA,MAAA,OAAK1F,UAAU,oDAAmDC,SAAA,EAChEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iCAAgCC,SAAC,kBAChDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oDAAmDC,SAC/DwE,EAAQG,aAIf7E,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBC,UAClCyF,EAAAA,EAAAA,MAAA,OAAK1F,UAAU,oDAAmDC,SAAA,EAChEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iCAAgCC,SAAC,kBAChDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oDAAmDC,SAC/DwE,EAAQM,iBAIfhF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBC,UAClCyF,EAAAA,EAAAA,MAAA,OAAK1F,UAAU,oDAAmDC,SAAA,EAChEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iCAAgCC,SAAC,kBAChDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oDAAmDC,SAC/DwE,EAAQO,iBAIfjF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBC,UAClCyF,EAAAA,EAAAA,MAAA,OAAK1F,UAAU,oDAAmDC,SAAA,EAChEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iCAAgCC,SAAC,wBAChDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oDAAmDC,SAC/DwE,EAAQQ,kBAIflF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBC,UAClCyF,EAAAA,EAAAA,MAAA,OAAK1F,UAAU,oDAAmDC,SAAA,EAChEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iCAAgCC,SAAC,+BAChDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oDAAmDC,SAC/DwE,EAAQS,kBAIfnF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBC,UAClCyF,EAAAA,EAAAA,MAAA,OAAK1F,UAAU,oDAAmDC,SAAA,EAChEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iCAAgCC,SAAC,kBAChDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oDAAmDC,UAChEF,EAAAA,EAAAA,KAAA,SACE8F,KAAK,SACLC,IAAI,IACJC,MAAOf,EACPgB,SAAWC,GAAMZ,EAAYlC,SAAS8C,EAAEC,OAAOH,QAC/C/F,UAAU,sDAKlB0F,EAAAA,EAAAA,MAAA,OAAK1F,UAAU,uBAAsBC,SAAA,EACnCF,EAAAA,EAAAA,KAAA,UAAQ8F,KAAK,SACX7F,UAAU,qEACVmG,QAzHmBC,KACzB,IAAIC,EAAYlG,EAAUmG,QACvBC,GAASA,EAAK/B,YAAcrB,SAASqB,KACtC,GAEF,GAAI6B,EAAW,CACb,IAAkD,IAA9CG,OAAOC,QAAQ,qHACjB,QAEFC,EAAAA,EAAAA,IAAUlC,EAAW6B,EAAUM,IAAM3B,GAClCQ,MAAM9C,IACLJ,QAAQC,IAAI,uBAAwBG,GAChC8D,OAAOC,QAAQ,wMACjB1F,EAAS,cACX,IAED0E,OAAO9C,IACNL,QAAQK,MAAM,qBAAsBA,EAAM,GAGhD,MACE+D,EAAAA,EAAAA,IAAUlC,EAAWQ,GAClBQ,MAAM9C,IACLJ,QAAQC,IAAI,uBAAwBG,GAEhC8D,OAAOC,QAAQ,wMACjB1F,EAAS,cACX,IAED0E,OAAO9C,IACNL,QAAQK,MAAM,qBAAsBA,EAAM,GAGhD,EAwFkC1C,SAC7B,2CAGDF,EAAAA,EAAAA,KAAA,UACE8F,KAAK,SACL7F,UAAU,sDACVmG,QAASrC,EAAW7D,SACrB,+CAIC,ECvKV,EAViB2G,KACf,MAAM,UAAEpC,IAAcqC,EAAAA,EAAAA,KACtB,OACEnB,EAAAA,EAAAA,MAAA,OAAK1F,UAAU,sBAAqBC,SAAA,EAClCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0BAAyBC,SAAC,kDACzCF,EAAAA,EAAAA,KAAC+G,EAAa,CAACtC,UAAWA,MACtB,C","sources":["components/common/FetchingModal.js","hooks/useCustomCart.js","hooks/useCustomLogin.js","hooks/useCustomMove.js","components/products/ReadComponents.js","pages/products/ReadPage.js"],"sourcesContent":["const FetchingModal = (  ) => {\r\n    return ( \r\n      <div \r\n      className={`fixed top-0 left-0 z-[1055] flex h-full w-full  place-items-center justify-center bg-black bg-opacity-20`}>\r\n        <div \r\n        className=\" bg-white rounded-3xl opacity-100 min-w-min h-1/4  min-w-[600px] flex justify-center items-center \">\r\n          \r\n          <div className=\"text-4xl font-extrabold text-orange-400 m-20\">\r\n            Loading.....\r\n          </div>\r\n        </div>\r\n      </div>  \r\n     );\r\n  }\r\n   \r\n  export default FetchingModal;\r\n  ","import { useDispatch, useSelector } from \"react-redux\"\r\nimport { getCartItemsAsync, postChangeCartAsync } from \"../slices/cartSlice\"\r\n\r\nconst useCustomCart = () => {\r\n\r\n  const cartItems = useSelector(state => state.cartSlice)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const refreshCart = () => {\r\n\r\n    dispatch(getCartItemsAsync())\r\n\r\n  }\r\n\r\n  const changeCart = (param) => {\r\n\r\n    dispatch(postChangeCartAsync(param))\r\n  }\r\n\r\n  return  {cartItems,  refreshCart, changeCart}\r\n\r\n}\r\n\r\nexport default useCustomCart\r\n\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navigate, createSearchParams, useNavigate } from \"react-router-dom\";\r\nimport { loginPostAsync, logout } from \"../slices/loginSlice\";\r\n\r\nconst useCustomLogin = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const exceptionHandle = (ex) => {\r\n    console.log(\"Exception------------------------\");\r\n\r\n    console.log(ex);\r\n\r\n    const errorMsg = ex.response.data.error;\r\n\r\n    const errorStr = createSearchParams({ error: errorMsg }).toString();\r\n\r\n    if (errorMsg === \"REQUIRE_LOGIN\") {\r\n      alert(\"로그인 해야만 합니다.\");\r\n      navigate({ pathname: \"/member/login\", search: errorStr });\r\n\r\n      return;\r\n    }\r\n\r\n    if (ex.response.data.error === \"ERROR_ACCESSDENIED\") {\r\n      alert(\"해당 메뉴를 사용할 수 있는 권한이 없습니다.\");\r\n      navigate({ pathname: \"/member/login\", search: errorStr });\r\n      return;\r\n    }\r\n  };\r\n\r\n  const loginState = useSelector((state) => state.loginSlice); //-------로그인 상태\r\n\r\n  const isLogin = loginState.username ? true : false; //----------로그인 여부\r\n\r\n  const doLogin = async (loginParam) => {\r\n    //----------로그인 함수\r\n\r\n    const action = await dispatch(loginPostAsync(loginParam));\r\n\r\n    return action.payload;\r\n  };\r\n\r\n  const doLogout = () => {\r\n    //---------------로그아웃 함수\r\n\r\n    dispatch(logout());\r\n  };\r\n\r\n  const moveToPath = (path) => {\r\n    //----------------페이지 이동\r\n    navigate({ pathname: path }, { replace: true });\r\n  };\r\n\r\n  const moveToLogin = () => {\r\n    //----------------------로그인 페이지로 이동\r\n    navigate({ pathname: \"/member/login\" }, { replace: true });\r\n  };\r\n\r\n  const moveToLoginReturn = () => {\r\n    //----------------------로그인 페이지로 이동 컴포넌트\r\n    return <Navigate replace to=\"/member/login\" />;\r\n  };\r\n\r\n  return {\r\n    loginState,\r\n    isLogin,\r\n    doLogin,\r\n    doLogout,\r\n    moveToPath,\r\n    moveToLogin,\r\n    moveToLoginReturn,\r\n    exceptionHandle,\r\n  };\r\n};\r\n\r\nexport default useCustomLogin;\r\n","import { useState } from \"react\";\r\nimport { createSearchParams, useNavigate, useSearchParams } from \"react-router-dom\";\r\n\r\nconst getNum = (param, defaultValue) => {\r\n  if (!param) {\r\n    return defaultValue;\r\n  }\r\n  return parseInt(param);\r\n};\r\n\r\nconst useCustomMove = () => {\r\n  const navigate = useNavigate();\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [queryParams] = useSearchParams();\r\n  const page = getNum(queryParams.get('page'), 0);\r\n  const size = getNum(queryParams.get('size'), 10);\r\n  const queryDefault = createSearchParams({ page, size }).toString();\r\n\r\n  const moveToList = (pageParam) => {\r\n    let queryStr = \"\";\r\n    if (pageParam) {\r\n      const pageNum = getNum(pageParam.page, 0);\r\n      const sizeNum = getNum(pageParam.size, 10);\r\n      queryStr = createSearchParams({ page: pageNum, size: sizeNum }).toString();\r\n    } else {\r\n      queryStr = queryDefault;\r\n    }\r\n    navigate({ pathname: `../list`, search: queryStr });\r\n    setRefresh(!refresh);\r\n  };\r\n\r\n  const moveToModify = (num) => {\r\n    console.log(queryDefault);\r\n    navigate({ pathname: `../modify/${num}`, search: queryDefault });\r\n  };\r\n\r\n  const moveToRead = (num) => {\r\n    console.log(queryDefault);\r\n    navigate({ pathname: `../read/${num}`, search: queryDefault });\r\n  };\r\n\r\n  return { moveToList, moveToModify, moveToRead, page, size, refresh };\r\n};\r\n\r\nexport default useCustomMove;","import { useEffect, useState } from \"react\";\r\nimport { getOne } from \"../../api/productsApi\";\r\nimport { API_SERVER_HOST } from \"../../api/productsApi\";\r\nimport useCustomMove from \"../../hooks/useCustomMove\";\r\nimport FetchingModal from \"../common/FetchingModal\";\r\nimport useCustomCart from \"../../hooks/useCustomCart\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport { addToCart } from \"../../api/cartApi\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst host = API_SERVER_HOST;\r\n\r\nconst ReadComponent = ({ productId }) => {\r\n  const initState = {\r\n    productId: 0,\r\n    productName: \"\",\r\n    info: \"\",\r\n    realPrice: 0,\r\n    price: 0,\r\n    discount: 0,\r\n    quantity: 0,\r\n    storeName: \"\",\r\n    storeInfo: \"\",\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n  const [product, setProduct] = useState(initState);\r\n  const { moveToList, moveToModify } = useCustomMove();\r\n  const [fetching, setFetching] = useState(false);\r\n  const { changeCart, cartItems } = useCustomCart();\r\n  const { loginState } = useCustomLogin();\r\n  const [quantity, setQuantity] = useState(1);\r\n\r\n  useEffect(() => {\r\n    setFetching(true);\r\n    getOne(productId)\r\n      .then((data) => {\r\n        console.log(data);\r\n        setProduct(data.data);\r\n        setFetching(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        setFetching(false);\r\n      });\r\n  }, [productId]);\r\n\r\n  const handleClickAddCart = () => {\r\n    let addedItem = cartItems.filter(\r\n      (item) => item.productId === parseInt(productId)\r\n    )[0];\r\n\r\n    if (addedItem) {\r\n      if (window.confirm(\"이미 추가된 상품입니다. 추가하시겠습니까?\") === false) {\r\n        return;\r\n      }\r\n      addToCart(productId, addedItem.qty + quantity)\r\n        .then((data) => {\r\n          console.log(\"Add to cart success:\", data);\r\n          if (window.confirm('장바구니에 상품이 추가되었습니다. \\n장바구니 페이지로 이동하시겠습니까?')) {\r\n            navigate('/carts/list');\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Add to cart error:\", error);\r\n          // 에러 처리\r\n        });\r\n    } else {\r\n      addToCart(productId, quantity)\r\n        .then((data) => {\r\n          console.log(\"Add to cart success:\", data);\r\n          //alert(\"상품이 장바구니에 담겼습니다.\");\r\n          if (window.confirm('장바구니에 상품이 추가되었습니다. \\n장바구니 페이지로 이동하시겠습니까?')) {\r\n            navigate('/carts/list');\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Add to cart error:\", error);\r\n          // 에러 처리\r\n        });\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"border-2 border-sky-200 mt-10 m-2 p-4\">\r\n      {fetching ? <FetchingModal /> : <></>}\r\n      <div className=\"flex justify-center mt-10\">\r\n        <div className=\"relative mb-4 flex w-full flex-wrap items-stretch\">\r\n          <div className=\"w-1/5 p-6 text-right font-bold\">제품 ID</div>\r\n          <div className=\"w-4/5 p-6 rounded-r border border-solid shadow-md\">\r\n            {product.id}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"flex justify-center\">\r\n        <div className=\"relative mb-4 flex w-full flex-wrap items-stretch\">\r\n          <div className=\"w-1/5 p-6 text-right font-bold\">제품명</div>\r\n          <div className=\"w-4/5 p-6 rounded-r border border-solid shadow-md\">\r\n            {product.productName}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"flex justify-center\">\r\n        <div className=\"relative mb-4 flex w-full flex-wrap items-stretch\">\r\n          <div className=\"w-1/5 p-6 text-right font-bold\">가격</div>\r\n          <div className=\"w-4/5 p-6 rounded-r border border-solid shadow-md\">\r\n            {product.price}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"flex justify-center\">\r\n        <div className=\"relative mb-4 flex w-full flex-wrap items-stretch\">\r\n          <div className=\"w-1/5 p-6 text-right font-bold\">설명</div>\r\n          <div className=\"w-4/5 p-6 rounded-r border border-solid shadow-md\">\r\n            {product.info}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"flex justify-center\">\r\n        <div className=\"relative mb-4 flex w-full flex-wrap items-stretch\">\r\n          <div className=\"w-1/5 p-6 text-right font-bold\">할인</div>\r\n          <div className=\"w-4/5 p-6 rounded-r border border-solid shadow-md\">\r\n            {product.discount}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"flex justify-center\">\r\n        <div className=\"relative mb-4 flex w-full flex-wrap items-stretch\">\r\n          <div className=\"w-1/5 p-6 text-right font-bold\">수량</div>\r\n          <div className=\"w-4/5 p-6 rounded-r border border-solid shadow-md\">\r\n            {product.quantity}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"flex justify-center\">\r\n        <div className=\"relative mb-4 flex w-full flex-wrap items-stretch\">\r\n          <div className=\"w-1/5 p-6 text-right font-bold\">매장명</div>\r\n          <div className=\"w-4/5 p-6 rounded-r border border-solid shadow-md\">\r\n            {product.storeName}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"flex justify-center\">\r\n        <div className=\"relative mb-4 flex w-full flex-wrap items-stretch\">\r\n          <div className=\"w-1/5 p-6 text-right font-bold\">매장 설명</div>\r\n          <div className=\"w-4/5 p-6 rounded-r border border-solid shadow-md\">\r\n            {product.storeInfo}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"flex justify-center\">\r\n        <div className=\"relative mb-4 flex w-full flex-wrap items-stretch\">\r\n          <div className=\"w-1/5 p-6 text-right font-bold\">수량</div>\r\n          <div className=\"w-4/5 p-6 rounded-r border border-solid shadow-md\">\r\n            <input\r\n              type=\"number\"\r\n              min=\"1\"\r\n              value={quantity}\r\n              onChange={(e) => setQuantity(parseInt(e.target.value))}\r\n              className=\"w-full p-2 border border-gray-300 rounded\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"flex justify-end p-4\">\r\n        <button type=\"button\" \r\n          className=\"inline-block rounded p-4 m-2 text-xl w-32  text-white bg-green-500\"\r\n          onClick={handleClickAddCart}\r\n        >\r\n          장바구니 담기\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"rounded p-4 m-2 text-xl w-32 text-white bg-blue-500\"\r\n          onClick={moveToList}\r\n        >\r\n          즉시 구매하기 \r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReadComponent;","import { useParams } from \"react-router-dom\";\r\nimport ReadComponent from \"../../components/products/ReadComponents\";\r\n\r\nconst ReadPage = () => {\r\n  const { productId } = useParams();\r\n  return (\r\n    <div className=\"p-4 w-full bg-white\">\r\n      <div className=\"text-3xl font-extrabold\">제품 상세 페이지</div>\r\n      <ReadComponent productId={productId}></ReadComponent>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReadPage;"],"names":["FetchingModal","_jsx","className","children","useCustomCart","cartItems","useSelector","state","cartSlice","dispatch","useDispatch","refreshCart","getCartItemsAsync","changeCart","param","postChangeCartAsync","useCustomLogin","navigate","useNavigate","loginState","loginSlice","isLogin","username","doLogin","async","loginPostAsync","loginParam","payload","doLogout","logout","moveToPath","path","pathname","replace","moveToLogin","moveToLoginReturn","Navigate","to","exceptionHandle","ex","console","log","errorMsg","response","data","error","errorStr","createSearchParams","toString","alert","search","getNum","defaultValue","parseInt","useCustomMove","refresh","setRefresh","useState","queryParams","useSearchParams","page","get","size","queryDefault","moveToList","pageParam","queryStr","pageNum","sizeNum","moveToModify","num","concat","moveToRead","_ref","productId","product","setProduct","productName","info","realPrice","price","discount","quantity","storeName","storeInfo","fetching","setFetching","setQuantity","useEffect","getOne","then","catch","_jsxs","_Fragment","id","type","min","value","onChange","e","target","onClick","handleClickAddCart","addedItem","filter","item","window","confirm","addToCart","qty","ReadPage","useParams","ReadComponent"],"sourceRoot":""}