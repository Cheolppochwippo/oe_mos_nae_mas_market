{"version":3,"file":"static/js/349.ae9acf23.chunk.js","mappings":"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","sources":["api/issuedApi.js","api/totalOrderApi.js","components/cart/CartItemComponent.js","../node_modules/jwt-decode/build/esm/index.js","menus/BasicMenu.js","components/payment/TotalOrderComponent.js","pages/payments/TotalOrderPage.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const API_SERVER_HOST = \"http://localhost:8080\";\r\n//쿠폰 발급\r\nexport const issuedCoupon = async (couponId) => {\r\n  const header = \"Bearer \" +localStorage.getItem('jwt');\r\n  const res = await axios.post(`${API_SERVER_HOST}/issued/${couponId}`, null,{\r\n    headers: {\r\n      Authorization: header,\r\n    },\r\n  });\r\n\r\n  return res.data;\r\n};\r\n\r\n//발급받은 쿠폰 조회\r\nexport const getIssued = async () => {\r\n  const header = \"Bearer \" +localStorage.getItem('jwt');\r\n  const res = await axios.get(`${API_SERVER_HOST}/issued`, {\r\n    headers: {\r\n      Authorization: header,\r\n    },\r\n  });\r\n\r\n  return res.data;\r\n};\r\n\r\n\r\n","import axios from \"axios\";\r\n\r\nexport const API_SERVER_HOST = \"http://localhost:8080\";\r\n\r\nexport const totalOrderAdd = async (totalOrderRequest) => {\r\n  const header = \"Bearer \" +localStorage.getItem('jwt');\r\n  const res = await axios.post(`${API_SERVER_HOST}/totalOrders`, totalOrderRequest, {\r\n    headers: {\r\n      Authorization: header,\r\n    },\r\n  });\r\n  return res.data;\r\n};\r\n\r\nexport const getTotalOrders = async (page) => {\r\n  const header =\"Bearer \" + localStorage.getItem('jwt');\r\n  const res = await axios.get(`${API_SERVER_HOST}/totalOrders`,  {\r\n    headers: {\r\n      Authorization: header,\r\n    }, params: {\r\n      page\r\n    },\r\n  });\r\n  return res.data.data;\r\n};\r\n\r\nexport const getTotalOrder = async (totalOrderId) => {\r\n  const header =\"Bearer \" + localStorage.getItem('jwt');\r\n  const res = await axios.get(`${API_SERVER_HOST}/totalOrders/${totalOrderId}`,  {\r\n    headers: {\r\n      Authorization: header,\r\n    },\r\n  });\r\n  return res.data;\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getCartItems, updateCartItem, removeFromCart } from '../../api/cartApi';\r\n\r\nconst CartItemComponent = () => {\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchCartItems = async () => {\r\n      try {\r\n        const data = await getCartItems();\r\n        setCartItems(data.data);\r\n        setTotalPrice(calculateTotalPrice(data.data));\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Failed to fetch cart items:', error);\r\n      }\r\n    };\r\n    fetchCartItems();\r\n  }, []);\r\n\r\n  const calculateTotalPrice = (items) => {\r\n    return items.reduce((total, item) => total + item.price * item.quantity, 0);\r\n  };\r\n\r\n  const handleChangeQuantity = async (orderId, newQuantity) => {\r\n    try {\r\n      await updateCartItem(orderId, newQuantity);\r\n      const updatedCartItems = cartItems.map((item) =>\r\n        item.orderId === orderId ? { ...item, quantity: newQuantity } : item\r\n      );\r\n      setCartItems(updatedCartItems);\r\n      setTotalPrice(calculateTotalPrice(updatedCartItems));\r\n    } catch (error) {\r\n      console.error('Failed to update cart item:', error);\r\n    }\r\n  };\r\n\r\n  const handleRemoveFromCart = async (orderId) => {\r\n    try {\r\n      await removeFromCart(orderId);\r\n      const updatedCartItems = cartItems.filter((item) => item.orderId !== orderId);\r\n      setCartItems(updatedCartItems);\r\n      setTotalPrice(calculateTotalPrice(updatedCartItems));\r\n    } catch (error) {\r\n      console.error('Failed to remove cart item:', error);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>; // 로딩 중일 때 표시할 내용\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"text-2xl font-bold mb-4\">Cart Items</h2>\r\n      {cartItems.length === 0 ? (\r\n        <p>Your cart is empty.</p>\r\n      ) : (\r\n        <>\r\n          <ul className=\"divide-y divide-gray-200\">\r\n            {cartItems.map((item) => (\r\n              <li key={item.orderId} className=\"py-4 flex items-center\">\r\n                <div className=\"w-2/3 flex items-center\">\r\n                  <div>\r\n                    <p className=\"text-lg font-semibold\">{item.productName}</p>\r\n                    <p className=\"text-gray-600\">Price: {item.price}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"w-1/3 flex justify-end items-center\">\r\n                  <div className=\"flex items-center\">\r\n                    <button\r\n                      className=\"m-1 p-1 text-2xl bg-orange-500 text-white w-8 rounded-lg\"\r\n                      onClick={() => handleChangeQuantity(item.orderId, item.quantity - 1)}\r\n                    >\r\n                      -\r\n                    </button>\r\n                    <span className=\"mx-2\">{item.quantity}</span>\r\n                    <button\r\n                      className=\"m-1 p-1 text-2xl bg-orange-500 text-white w-8 rounded-lg\"\r\n                      onClick={() => handleChangeQuantity(item.orderId, item.quantity + 1)}\r\n                    >\r\n                      +\r\n                    </button>\r\n                  </div>\r\n                  <button\r\n                    className=\"ml-4 text-red-500 hover:text-red-700\"\r\n                    onClick={() => handleRemoveFromCart(item.orderId)}\r\n                  >\r\n                    Remove\r\n                  </button>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <div className=\"mt-8 flex justify-end\">\r\n            <div className=\"text-xlg font-bold \">\r\n              Total Price: {totalPrice.toLocaleString()} 원\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"mt-10 flex justify-end \">\r\n            <button className=\"px-4 py-2 bg-orange-400 text-white rounded-md\">\r\n              주문하기\r\n            </button>\r\n          </div> */}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartItemComponent;","export class InvalidTokenError extends Error {\n}\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(atob(str).replace(/(.)/g, (m, p) => {\n        let code = p.charCodeAt(0).toString(16).toUpperCase();\n        if (code.length < 2) {\n            code = \"0\" + code;\n        }\n        return \"%\" + code;\n    }));\n}\nfunction base64UrlDecode(str) {\n    let output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw new Error(\"base64 string is not of the correct length\");\n    }\n    try {\n        return b64DecodeUnicode(output);\n    }\n    catch (err) {\n        return atob(output);\n    }\n}\nexport function jwtDecode(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified: must be a string\");\n    }\n    options || (options = {});\n    const pos = options.header === true ? 0 : 1;\n    const part = token.split(\".\")[pos];\n    if (typeof part !== \"string\") {\n        throw new InvalidTokenError(`Invalid token specified: missing part #${pos + 1}`);\n    }\n    let decoded;\n    try {\n        decoded = base64UrlDecode(part);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid base64 for part #${pos + 1} (${e.message})`);\n    }\n    try {\n        return JSON.parse(decoded);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid json for part #${pos + 1} (${e.message})`);\n    }\n}\n","import { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport logo from \"../img/image.png\"; \r\n\r\nconst BasicMenu = () => {\r\n  const loginState = useSelector((state) => state.loginSlice);\r\n  const jwt = localStorage.getItem(\"jwt\");\r\n  const isLoggedIn = !!jwt;\r\n  const isSeller = isLoggedIn && jwtDecode(jwt).role === \"SELLER\";\r\n\r\n  return (\r\n    <nav id=\"navbar\" className=\"flex bg-blue-300\">\r\n      <div className=\"w-4/5 bg-orange-400\">\r\n        <ul className=\"flex p-4 text-white font-bold\">\r\n          <li className=\"pr-6 text-2xl \">\r\n            <Link to={\"/\"}><img src={logo} alt=\"Logo\" style={{ maxHeight: \"100px\" }} /></Link>\r\n          </li>\r\n          {isLoggedIn ? ( //로그인한 사용자만 출력되는 메뉴\r\n            <>\r\n              <li className=\"pr-6 text-3xl mt-10\">\r\n                <Link to={\"/carts/\"}>Cart</Link>\r\n              </li>\r\n              <li className=\"pr-6 text-3xl mt-10\">\r\n            <Link to={\"/coupons/\"}>Coupons</Link>\r\n          </li>\r\n            </>\r\n            \r\n          ) : (\r\n            <></>\r\n          )}\r\n          {isSeller ? ( //seller만 보이는 메뉴\r\n            <>\r\n              <li className=\"pr-6 text-3xl mt-10\">\r\n                <Link to={\"/store/\"}>Store</Link>\r\n              </li>\r\n            </>\r\n          ) : (\r\n            <></>\r\n          )}\r\n         \r\n          {/* <li className=\"pr-6 text-3xl mt-10\">\r\n            <Link to={\"/totalOrder\"}>Payments</Link>\r\n          </li> */}\r\n        </ul>\r\n      </div>\r\n\r\n      <div className=\"w-1/5 flex justify-end bg-orange-300 p-4 font-medium\">\r\n      {isLoggedIn ? ( \r\n              <li className=\"pr-6 text-3xl mt-10\">\r\n                <Link to={\"/member/mypage\"}>Mypage</Link>\r\n              </li>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        {isLoggedIn ? (\r\n          <div className=\"text-white text-3xl m-1 rounded mt-10\">\r\n            <Link to={\"/member/logout\"}>Logout</Link>\r\n          </div>\r\n        ) : (\r\n          <div className=\"text-white text-3xl m-1 rounded mt-10\">\r\n            <Link to={\"/member/login\"}>Login</Link>\r\n          </div>\r\n        )}\r\n          \r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default BasicMenu;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { totalOrderAdd } from \"../../api/totalOrderApi\";\r\nimport { getIssued } from \"../../api/issuedApi\";\r\nimport \"./TotalOrderComponent.css\"; // CSS 파일 import\r\n\r\nconst TotalOrderComponent = () => {\r\n  const [coupons, setCoupons] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [requestParam, setRequestParam] = useState({ issuedId: 0, address: \"\" });\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setRequestParam((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const addOrder = async () => {\r\n    try {\r\n      const addedOrder = await totalOrderAdd(requestParam);\r\n      localStorage.setItem(\"addOrder\", JSON.stringify(addedOrder));\r\n      navigate({ pathname: \"/payment\" }, { replace: true });\r\n    } catch (error) {\r\n      console.error(\"Error while adding order:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getIssued()\r\n    .then((coupons) => {\r\n      setCoupons(coupons || []);\r\n      setLoading(false);\r\n    })\r\n    .catch((error) => {\r\n      setLoading(false);\r\n      console.error(\"Error fetching coupons:\", error);\r\n    });\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n      <div className=\"total-order-container\">\r\n        <div className=\"coupon-container\">\r\n          <label htmlFor=\"issuedId\" className=\"coupon-label\">\r\n            사용 가능한 쿠폰\r\n          </label>\r\n          <select name=\"issuedId\" id=\"issuedId\" onChange={handleChange} className=\"coupon-select\">\r\n            <option value=\"0\">선택 안함</option>\r\n            {coupons.data.map((coupon, index) => (\r\n                <option key={index} value={coupon.issuedId}>\r\n                  {coupon.couponInfo || \"No Information\"}\r\n                </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"address-container\">\r\n          <label htmlFor=\"address\" className=\"address-label\">\r\n            받으실 주소\r\n          </label>\r\n          <input\r\n              className=\"address-input\"\r\n              name=\"address\"\r\n              type=\"text\"\r\n              value={requestParam.address}\r\n              onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"payment-button-container\">\r\n          <button className=\"payment-button\" onClick={addOrder}>\r\n            결제하기\r\n          </button>\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default TotalOrderComponent;\r\n","import BasicMenu from \"../../menus/BasicMenu\";\r\nimport TotalOrderComponent from \"../../components/payment/TotalOrderComponent\"\r\nimport CartItemComponent from \"../../components/cart/CartItemComponent\";\r\n\r\nconst TotalOrderPage = () => {\r\n  return (\r\n      <div className=\"fixed top-0 left-0 z-[1055] flex flex-col h-full w-full\">\r\n        <BasicMenu />\r\n        \r\n\r\n        <div className=\"w-full flex flex-wrap  h-full justify-center  items-center border-2\">\r\n        \r\n         <CartItemComponent/>\r\n        \r\n          <TotalOrderComponent />\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default TotalOrderPage;\r\n"],"names":["API_SERVER_HOST","issuedCoupon","async","header","localStorage","getItem","axios","post","concat","couponId","headers","Authorization","data","getIssued","get","totalOrderAdd","totalOrderRequest","getTotalOrders","params","page","getTotalOrder","totalOrderId","CartItemComponent","cartItems","setCartItems","useState","loading","setLoading","totalPrice","setTotalPrice","useEffect","getCartItems","calculateTotalPrice","error","console","fetchCartItems","items","reduce","total","item","price","quantity","handleChangeQuantity","orderId","newQuantity","updateCartItem","updatedCartItems","map","_jsx","children","_jsxs","className","length","_Fragment","productName","onClick","removeFromCart","filter","handleRemoveFromCart","toLocaleString","InvalidTokenError","Error","base64UrlDecode","str","output","replace","decodeURIComponent","atob","m","p","code","charCodeAt","toString","toUpperCase","b64DecodeUnicode","err","prototype","name","BasicMenu","useSelector","state","loginSlice","jwt","isLoggedIn","isSeller","token","options","pos","part","split","decoded","e","message","JSON","parse","jwtDecode","role","id","Link","to","src","logo","alt","style","maxHeight","TotalOrderComponent","coupons","setCoupons","requestParam","setRequestParam","issuedId","address","navigate","useNavigate","handleChange","value","target","prev","then","catch","htmlFor","onChange","coupon","index","couponInfo","type","addedOrder","setItem","stringify","pathname","TotalOrderPage"],"sourceRoot":""}