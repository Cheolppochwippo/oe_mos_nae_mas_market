# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "dev","main" ]
  pull_request:
    branches: [ "dev","main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    env:
      MYSQL_HOST: ${{ secrets.MYSQL_HOST }}
      MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
      MYSQL_USERNAME: ${{ secrets.MYSQL_USERNAME }}
      MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}


    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Start MySQL server
        run: |
          docker run --name mysql-server -p 3306:3306 -e MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_PASSWORD }} -d mysql:latest
          sleep 30 # MySQL 서버가 시작되기를 기다립니다.

      - name: Start Redis server
        run: docker run --name redis-server -d redis

      # Install Redisson
      - name: Install Redisson
        run: |
          curl -O https://download.redis.io/redis-stable.tar.gz
          tar xzvf redis-stable.tar.gz
          cd redis-stable
          make
          cd ..   

      - name: Configure MySQL
        run: |
          echo "Waiting for MySQL to start..."
          while ! mysqladmin ping -hlocalhost --silent; do
            sleep 1
          done
          echo "MySQL started successfully!"
          mysql -h${{ secrets.MYSQL_HOST }} -u${{ secrets.MYSQL_USERNAME }} -p${{ secrets.MYSQL_PASSWORD }} -e "CREATE DATABASE IF NOT EXISTS ${{ secrets.MYSQL_DATABASE }};"

      - name: Build with Gradle
        run: ./gradlew clean build

      - name: Stop and remove Redis container
        run: docker rm -f redis-server

      - name: Stop and remove MySQL container
        run: docker rm -f mysql-server