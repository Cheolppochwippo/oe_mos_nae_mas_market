# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]
env:
  PROJECT_NAME: plug-project
  BUCKET_NAME: cheolppo
  CODE_DEPLOY_APP_NAME: cheolppo
  DEPLOYMENT_GROUP_NAME: cheolppo_group

permissions:
  contents: read

# 수행할 작업들을 선언합니다.
jobs:
  build:
    
    # 우분투 최신버전에서 작업을 실행
    runs-on: ubuntu-latest

    # steps 하위로 선언한 순서대로 작업을 수행합니다.
    steps:
   
      # 코드 체크아웃은 저장소에서 소스코드를 가져와서 현재 작업 디렉토리에 복사하는 작업입니다.
      # 최신 소스 코드를 가져와서 빌드, 테스트, 배포 등의 작업을 진행할 수 있습니다.
      - name: 코드 체크아웃
        uses: actions/checkout@v3
        
      # 작업한 스프링 프로젝트의 자바 버전을 설정합니다.
      - name: JDK 17 설정
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          
      # Gradle 스크립트 실행 전 실행 권한을 부여합니다.
      - name: gradlew 권한 부여
        run: chmod +x ./gradlew
        shell: bash        
  
      # 스프링 프로젝트의 빌드도구인 gradle을 통해 빌드하는 설정입니다.
      - name: Gradle로 빌드
        uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
        with:
          arguments: build
          
#------------------------------------------------ 

      # S3 버킷으로 옮길 zip 파일을 생성합니다.
      - name: ZIP 파일 생성
        run: zip -qq -r ./$GITHUB_SHA.zip .
        shell: bash
      
      # AWS 계정의 서비스 접근 권한을 획득합니다.
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_PRIVATE_ACCESS_KEY }}
          aws-region: ap-northeast-2
      
      # 생성된 zip 파일을 S3에 업로드 합니다.
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip
      
      # CodeDeploy에 배포요청을 진행합니다.
      - name: Code Deploy To EC2 instance
        run: aws deploy create-deployment 
                --application-name $CODE_DEPLOY_APP_NAME 
                --deployment-config-name CodeDeployDefault.AllAtOnce
                --deployment-group-name $DEPLOYMENT_GROUP_NAME 
                --s3-location bucket=$BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip
